*{
    padding:0px;
    margin: 0px;
}
ul{
    margin:30px 50px;
}
ul li{
    margin: 0px 20px;
    }
li a{
    text-decoration: none;
    font-family: "Comic Sans MS";
    font-size: 18px;
    color: black;
}
/**
    Aqui empieza el ejemeplo de FLEX-GROW


    En el id original es el nav contenedora de las cajas, que tiene un ancho de 600 y un alto de 150px
 */
#original{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    background-color: aquamarine;
}
/*
    Las tres cajas tiene estas medidas y las flotamos para que queden unas al lado de otras
 */
#caja1, #caja2, #caja3{
    width: 100px;
    height: 30px;
    border: 1px solid black;
    margin: 23px ;
    float: left;
    background-color: aqua;

}
/**
 Aqui vienee y aplicamos estas cajas el diplay flex con el que luego cogeremos las caja con display grow
 */
#ejemplo-flex-grow{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: aquamarine;

}

#caja5, #caja6, #caja7{
    width: 100px;
    height: 30px;
    border: 1px solid black;
    margin: 23px ;
    background-color: aqua;

}
/**
 Aqui vienee y aplicamos flex-grow para que esta caja se haga mas grande para ocupar todo el espacio, si ponemos un 0,
  hace que todas las cajas queden con el mismo tamaño ya que tiene su funcion por defecto de display:flex; y si poneos
  un 1 o otro numero hace que esta caja se haga mas grande que el resto y la otras mantengan su tamaño original.
 */
#caja6{
    flex-grow: 1;

}
/**
        Aqui empieza el FLEX-SHRING

        En este caso disponemos de una caja mas para ver como se sale de la caja y con shring hacemos que
        quepan todas una al lado de la otra y no se desborde y reduzca su tamaño y la arquitectura de cajas
        es igual que la anterior con su medidas similares y organizacion.
 */
#original2{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    background-color: greenyellow;
}

#caja11, #caja12, #caja13, #caja14{
    width: 150px;
    height: 30px;
    border: 1px solid black;
    margin: 23px ;
    float: left;
    background-color: darksalmon;
}
/**
 Aqui vienee y aplicamos estas cajas el diplay flex con display grow
 */
#ejemplo-flex-shrink{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: greenyellow;
}


#caja15, #caja16, #caja17, #caja18{
    width: 150px;
    height: 30px;
    border: 1px solid black;
    margin: 23px ;
    background-color: darksalmon;
}
/**
esta caja se le aplica el flex-shrink, si ponemos 0 aqui se quede en su tamaño natural y se reducen
el resto del las cajas y si poneos el 1 se quedan todas con un tamñao por defecto.
Apartir del 1 hacemos que a mayor numero sea menor su proporcion respecto al resto de cajas, ya que como se dividen en
mas partes el espacio las otras cogen las mis proporciones por igual y esta coge solo una y por eso, se reduce su tamaño.
 */
#caja16{

    flex-shrink: 2;
}

/**
            FLEX-BASIS


 */
#original3{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    background-color: olivedrab;
}

#caja21, #caja22, #caja23, #caja24{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/**

    Aqui display flex como en los anteriores ejemplos
 */

#ejemplo-flex-basis{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: olivedrab;
}

/**
    Flex-basis tiene 4 valores posible numerico|auto|initial|inherit estos valores hacen todos referencia al
    ancho de la caja es parecido al width, con la diferencia que es flexible, si ponemos un numero en pixel o porcentajes
    coge ese tamaño la caja o si es menor al contendo coge el tamaño del contenido, ahora con auto se ajusta la caja al
    contenido y con "initial" coje un valor predeterminado y con inherit hereda del padre esa propiedad.
 */
#caja25, #caja26, #caja27{

    height: 30px;
    border: 1px solid black;
    background-color: powderblue;

    flex-basis:140px;
}


/**
            FLEX-WRAP
 */
/**
    Aqui estan las cajas en su estado natural y se sobresalen del contendor,
    ya que ocupan mas espacio su contenido que el contendor
 */
#original4{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    background-color: olivedrab;
}
#caja31, #caja32, #caja33 {
    width: 250px;
    height: 30px;
    border: 1px solid black;
    margin: 23px ;

    background-color: darksalmon;
}
/**
            FLEX-WRAP:NOWRAP

    Este parametro de flex se aplica a la caja contendora no a sus cajas contenidas, el nowrap ajusta las caja a una
    fila y hace que ocupen el espacio libre y se repartan entre las cajas a partes iguales.
 */
#ejemplo-flex-nowrap{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: olivedrab;
    flex-wrap: nowrap;
}

#caja35, #caja36, #caja37{
    width: 250px;
    height: 30px;
    border: 1px solid black;
    background-color: darksalmon;
    margin: 23px;

}

/**
        FLEX-WRAP:WRAP
    Aqui mantiene el tamaño de las cajas lo unico que le indica al css que pueden haber cambiado de linea
    las cajas ordenadas

 */
#ejemplo-flex-wrap{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: olivedrab;
    flex-wrap: wrap;
}
#caja38, #caja39, #caja30{
    width: 250px;
    height: 30px;
    border: 1px solid black;
    background-color: darksalmon;
    margin: 23px;

}

/**
        FLEX-WRAP:WRAP-REVERSE

     Aqui realiza exatamente lo mismo que el WRAP pero a la inversa ordenando al contraio las cajas.
 */
#ejemplo-flex-wrap-reverse{
    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: olivedrab;
    flex-wrap: wrap-reverse;
}
#caja40, #caja41, #caja42{
    width: 250px;
    height: 30px;
    border: 1px solid black;
    background-color: darksalmon;
    margin: 23px;

}

/**
        JUSTIFY-CONTENT: FLEX-START

        Aquí esta propiedad es como la inicia por defecto el justify-content
 */
/*
   Aqui es aun sin aplicar el justify-content
 */
#original50{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #305fb6;


}
#caja50, #caja51, #caja52{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}
/**
        El flex-star es el Predeterminado y como podemos ver no modifica el contenido ni el orden de las cajas.
 */
#ejemplo-flex-start{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #305fb6;
    justify-content: flex-start;

}
#caja55, #caja56, #caja57{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/**
    EL JUSTIFY-CONTENT:FLEX-END

    Esta propiedad hace el caso contrario ya que lleva al final de la flexion las cajas las pone en la dirección contraria
    a la que esta por defecto como vemos el caso anterior.
 */
#ejemplo-flex-end{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #305fb6;
    justify-content: flex-end;

}
#caja58, #caja59, #caja60{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/**
    JUSTIFY-CONTENT:CENTER

    Esta propiedad centra el conetido en la caja que esta contenida
 */

#ejemplo-flex-center{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #305fb6;
    justify-content: center;

}
#caja61, #caja62, #caja63{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/**
    JUSTIFY-CONTENT:SPACE-BETWEEN

    Se destibuyen las caja que la primera este en el inicio y la ultima al final de la linea todas ellas repartidas
    de forma uniforme
 */
#ejemplo-space-between{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #305fb6;
    justify-content: space-between;

}
#caja64, #caja65, #caja66{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}


/**
     JUSTIFY-CONTENT:SPACE-AROUND

     Aqui se distribuye el espacio que ocupa cada caja a su alrededor por igual. Lo que quiere decir que tendran todas las
     cajas el mismo espacio acada lado.
 */

#ejemplo-space-around{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #305fb6;
    justify-content: space-around;

}
#caja67, #caja68, #caja69{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/**
           JUSTIFY-CONTENT:SPACE-EVENLY

     Esta propiedad parece similar a la anterio, pero su diferencia es que hace que entre una caja y otra tengan el mismo
     espacio y no se distribuyan por todo el espacion del contenedor.
 */
#ejemplo-space-evenly{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #305fb6;
    justify-content: space-evenly;

}
#caja70, #caja71, #caja72{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/**
            ALIGN-ITEM
 */

#original80{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #e54444;


}
#caja80, #caja81, #caja82{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}
/*
    ALIGN-ITEM:FLEX-START

    El flex star trae las caja al inicio de la primera linea como su colocaión por defecto.
 */

#ejemplo-align-flex-star{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #e54444;
    align-items: flex-start;


}
#caja83, #caja84, #caja85{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/*
    ALIGN-ITEM:FLEX-END

    El flex end lleva las caja abajo de su contenedor a la ultima fila.
 */
#ejemplo-align-flex-end{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #e54444;
    align-items: flex-end;


}
#caja86, #caja87, #caja88{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

/*
    ALIGN-ITEM:CENTER


    Aqui se centra el contenido de forma vertical como las anteriores veces de forma que queda en las fila del medio.
 */

#ejemplo-align-center{

    width: 600px;
    height: 150px;
    border: 1px solid black;
    margin: 50px;
    display: flex;
    background-color: #e54444;
    align-items: center;


}
#caja90, #caja91, #caja92{

    height: 30px;
    border: 1px solid black;

    float: left;
    background-color: powderblue;
}

